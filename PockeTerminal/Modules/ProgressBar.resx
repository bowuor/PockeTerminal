<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bunifuCircleProgressbar1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        IPivA2LYAAAAAElFTkSuQmCC
</value>
  </data>
  <metadata name="stretch.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
</root>